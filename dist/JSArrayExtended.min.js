/*! JSArrayExtended :D */
!function(){"use strict";var a,b=function(a){return"function"==typeof a},c=function(a){return a},d=function(a){return function(b){return a===b}},e={each:function(a){var d=this.length;if(d){a=b(a)?a:c;for(var e=0;d>e;e+=1)a(this[e],e)}return this},where:function(a){var b=[];return this.each(function(c,d){a(c,d)&&b.push(c)}),b},any:function(a){var c=this.length;if(c){a=b(a)?a:d(a);for(var e=0;c>e;e+=1)if(a(this[e],e))return!0}return!1},select:function(a){var c=this.length,e=[];return a=b(a)?a:d(a),c&&this.each(function(b,c){e.push(a(b,c))}),e},take:function(a,d){var e,f=this.length,g=[];if(a=parseInt(a,10)||0,!f||1>a)return g;d=b(d)?d:c;for(var h=0;f>h&&a>0;h+=1)if(e=this[h],d(e,h)&&(g.push(e),g.length>=a))return g;return g},skip:function(a){var b=this.length,c=this.slice();return a=parseInt(a,10)||0,!b||1>a?c:(c.splice(0,a),c)},first:function(a){var d,e=this.length,f=null;if(1===e)return this[0];if(f=null,!e)return f;a=b(a)?a:c;for(var g=0;e>g;g+=1)if(d=this[g],a(d,g))return d;return f},last:function(){console.error("#last is not implemented yet")},count:function(){console.error("#count is not implemented yet")},index:function(){console.error("#index is not implemented yet")},pluck:function(){console.error("#pluck is not implemented yet")},sum:function(){console.error("#sum is not implemented yet")},max:function(){console.error("#max is not implemented yet")},min:function(){console.error("#min is not implemented yet")},flatten:function(){console.error("#flatten is not implemented yet")},map:function(a){console.log("#map not tested yet");var b=[];return this.each(function(c){b.push(a(c))}),b},filter:function(a){console.log("#filter not tested yet");var b=[];return this.each(function(c){a(c)&&b.push(c)}),b},reduce:function(a,b){console.log("#reduce not tested yet");var c=b;return this.each(function(b){c=a(b,c)}),c}};for(a in e)e.hasOwnProperty(a)&&(b(Array.prototype[a])||(Array.prototype[a]=e[a]))}();